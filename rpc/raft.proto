syntax = "proto3";
package raft;

// Log entry used in AppendEntries
message LogEntry {
  int32 term    = 1;
  int32 index   = 2;
  string command = 3;
}

// RequestVote RPC
message RequestVoteRequest {
  int32 term          = 1;
  int32 candidateId   = 2;
  int32 lastLogIndex  = 3;
  int32 lastLogTerm   = 4;
}
message RequestVoteReply {
  int32 term          = 1;  // currentTerm for the candidate to update itself
  bool  voteGranted   = 2;
}

// AppendEntries RPC (used for heartbeats + log replication)
message AppendEntriesRequest {
  int32 term            = 1;
  int32 leaderId        = 2;
  int32 prevLogIndex    = 3;
  int32 prevLogTerm     = 4;
  repeated LogEntry entries = 5;
  int32 leaderCommit    = 6;
}
message AppendEntriesReply {
  int32 term          = 1;
  bool  success       = 2;
}

// Raft consensus service
service Raft {
  rpc RequestVote(RequestVoteRequest)   returns (RequestVoteReply);
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesReply);
}
